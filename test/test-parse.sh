#!/bin/bash

# Copyright (C) 2016, 2017  Stefan Vargyas
# 
# This file is part of C++Py-Tree.
# 
# C++Py-Tree is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# C++Py-Tree is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with C++Py-Tree.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T parse
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L parse.old <(echo \
'$ cd ../src/tree
$ export LD_LIBRARY_PATH=.:abc:cxxpy
$ tree() { ./tree --verbose -n "$@"; }
$ tree $'\''\n\n\n\n\n'\''
tree: parse error: <text>:5:1: expected token IDENT but got EOS
tree: parse error: <text>:5:1: 
tree: parse error: <text>:5:1: ^
command failed: tree $'\''\n\n\n\n\n'\''
$ tree $'\''A\n\n\n\n\n'\''
tree: parse error: <text>:5:1: expected token "(" but got EOS
tree: parse error: <text>:5:1: 
tree: parse error: <text>:5:1: ^
command failed: tree $'\''A\n\n\n\n\n'\''
$ tree $'\''\n\n\n\nA\n'\''
tree: parse error: <text>:5:2: expected token "(" but got EOS
tree: parse error: <text>:5:2: A
tree: parse error: <text>:5:2:  ^
command failed: tree $'\''\n\n\n\nA\n'\''
$ tree $'\''\n\n\n\nA  \n'\''
tree: parse error: <text>:5:4: expected token "(" but got EOS
tree: parse error: <text>:5:4: A  
tree: parse error: <text>:5:4:    ^
command failed: tree $'\''\n\n\n\nA  \n'\''
$ tree -d $'\''\n\n\n\nA  \n'\''
skip_spaces          pos(1,1)   ^\n\n\n\n$ pos(5,1)
next_token           pos(5,2)   tok: pos(5,1)   type=IDENT    lex='\''A'\''                ^  \n$
parse                pos(5,2)   tok: pos(5,1)   type=IDENT    lex='\''A'\''                ^  \n$
parse_tree           pos(5,2)   tok: pos(5,1)   type=IDENT    lex='\''A'\''                ^  \n$
parse_tree_node      pos(5,2)   tok: pos(5,1)   type=IDENT    lex='\''A'\''                ^  \n$
parse_node_name      pos(5,2)   tok: pos(5,1)   type=IDENT    lex='\''A'\''                ^  \n$
skip_spaces          pos(5,2)   ^  \n$ pos(5,4)
next_token           pos(5,4)   tok: pos(5,4)   type=EOS      lex='\'''\''                 ^$
tree: parse error: <text>:5:4: expected token "(" but got EOS
tree: parse error: <text>:5:4: A  
tree: parse error: <text>:5:4:    ^
command failed: tree -d $'\''\n\n\n\nA  \n'\''
$ tree $'\''\n    \n         \n"abc"\ndef"\nghi'\''
tree: parse error: <text>:4:1: expected token IDENT but got STR
tree: parse error: <text>:4:1: "abc"
tree: parse error: <text>:4:1: ^
command failed: tree $'\''\n    \n         \n"abc"\ndef"\nghi'\''
$ tree $'\''\n    \n         \n"abc\ndef"\nghi'\''
tree: parse error: <text>:4:5: end of input line inside literal
tree: parse error: <text>:4:5: "abc
tree: parse error: <text>:4:5:     ^
command failed: tree $'\''\n    \n         \n"abc\ndef"\nghi'\''
$ tree "A('\''\'\'')"
tree: parse error: <text>:1:7: end of input inside literal
tree: parse error: <text>:1:7: A('\''\'\'')
tree: parse error: <text>:1:7:       ^
command failed: tree "A('\''\'\'')"
$ tree '\''A("\")'\''
tree: parse error: <text>:1:7: end of input inside literal
tree: parse error: <text>:1:7: A("\")
tree: parse error: <text>:1:7:       ^
command failed: tree '\''A("\")'\''
$ tree $'\''A("\\\n")'\''
tree: parse error: <text>:1:5: end of input line inside literal
tree: parse error: <text>:1:5: A("\
tree: parse error: <text>:1:5:     ^
command failed: tree $'\''A("\\\n")'\''
$ tree $'\''A("\x2")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x2'\''
tree: parse error: <text>:1:4: A("\x02")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x2")'\''
$ tree $'\''A("\x3")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x3'\''
tree: parse error: <text>:1:4: A("\x03")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x3")'\''
$ tree $'\''A("\x4")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x4'\''
tree: parse error: <text>:1:4: A("\x04")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x4")'\''
$ tree $'\''A("\x5")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x5'\''
tree: parse error: <text>:1:4: A("\x05")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x5")'\''
$ tree $'\''A("\x6")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x6'\''
tree: parse error: <text>:1:4: A("\x06")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x6")'\''
$ tree $'\''A("\x7")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x7'\''
tree: parse error: <text>:1:4: A("\x07")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x7")'\''
$ tree $'\''A("\x8")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x8'\''
tree: parse error: <text>:1:4: A("\x08")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x8")'\''
$ tree $'\''A("\x9")'\''
tree: parse error: <text>:1:4: unexpected char '\''\t'\''
tree: parse error: <text>:1:4: A("\t")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x9")'\''
$ tree $'\''A("\xb")'\''
tree: parse error: <text>:1:4: unexpected char '\''\v'\''
tree: parse error: <text>:1:4: A("\v")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\xb")'\''
$ tree $'\''A("\xc")'\''
tree: parse error: <text>:1:4: unexpected char '\''\f'\''
tree: parse error: <text>:1:4: A("\f")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\xc")'\''
$ tree $'\''A("\xd")'\''
tree: parse error: <text>:1:4: unexpected char '\''\r'\''
tree: parse error: <text>:1:4: A("\r")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\xd")'\''
$ tree $'\''A("\xe")'\''
tree: parse error: <text>:1:4: unexpected char '\''\xe'\''
tree: parse error: <text>:1:4: A("\x0e")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\xe")'\''
$ tree $'\''A("\xf")'\''
tree: parse error: <text>:1:4: unexpected char '\''\xf'\''
tree: parse error: <text>:1:4: A("\x0f")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\xf")'\''
$ tree $'\''A("\x10")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x10'\''
tree: parse error: <text>:1:4: A("\x10")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x10")'\''
$ tree $'\''A("\x11")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x11'\''
tree: parse error: <text>:1:4: A("\x11")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x11")'\''
$ tree $'\''A("\x12")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x12'\''
tree: parse error: <text>:1:4: A("\x12")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x12")'\''
$ tree $'\''A("\x13")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x13'\''
tree: parse error: <text>:1:4: A("\x13")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x13")'\''
$ tree $'\''A("\x14")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x14'\''
tree: parse error: <text>:1:4: A("\x14")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x14")'\''
$ tree $'\''A("\x15")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x15'\''
tree: parse error: <text>:1:4: A("\x15")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x15")'\''
$ tree $'\''A("\x16")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x16'\''
tree: parse error: <text>:1:4: A("\x16")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x16")'\''
$ tree $'\''A("\x17")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x17'\''
tree: parse error: <text>:1:4: A("\x17")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x17")'\''
$ tree $'\''A("\x18")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x18'\''
tree: parse error: <text>:1:4: A("\x18")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x18")'\''
$ tree $'\''A("\x19")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x19'\''
tree: parse error: <text>:1:4: A("\x19")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x19")'\''
$ tree $'\''A("\x1a")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x1a'\''
tree: parse error: <text>:1:4: A("\x1a")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x1a")'\''
$ tree $'\''A("\x1b")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x1b'\''
tree: parse error: <text>:1:4: A("\x1b")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x1b")'\''
$ tree $'\''A("\x1c")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x1c'\''
tree: parse error: <text>:1:4: A("\x1c")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x1c")'\''
$ tree $'\''A("\x1d")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x1d'\''
tree: parse error: <text>:1:4: A("\x1d")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x1d")'\''
$ tree $'\''A("\x1e")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x1e'\''
tree: parse error: <text>:1:4: A("\x1e")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x1e")'\''
$ tree $'\''A("\x1f")'\''
tree: parse error: <text>:1:4: unexpected char '\''\x1f'\''
tree: parse error: <text>:1:4: A("\x1f")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\x1f")'\''
$ tree -n $'\''\xc3\xa1'\''
tree: parse error: <text>:1:1: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:1: \xc3\xa1
tree: parse error: <text>:1:1: ^
command failed: tree -n $'\''\xc3\xa1'\''
$ tree -n $'\''A\xc3\xa1'\''
tree: parse error: <text>:1:2: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:2: A\xc3\xa1
tree: parse error: <text>:1:2:  ^
command failed: tree -n $'\''A\xc3\xa1'\''
$ tree $'\''A(.\xc3\xa1="")'\''
tree: parse error: <text>:1:4: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:4: A(.\xc3\xa1="")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A(.\xc3\xa1="")'\''
$ tree $'\''A(.a=\xc3\xa1())'\''
tree: parse error: <text>:1:6: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:6: A(.a=\xc3\xa1())
tree: parse error: <text>:1:6:      ^
command failed: tree $'\''A(.a=\xc3\xa1())'\''
$ tree $'\''A(.a=\xc3\xa1)'\''
tree: parse error: <text>:1:6: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:6: A(.a=\xc3\xa1)
tree: parse error: <text>:1:6:      ^
command failed: tree $'\''A(.a=\xc3\xa1)'\''
$ tree $'\''A(.a=B\xc3\xa1())'\''
tree: parse error: <text>:1:7: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:7: A(.a=B\xc3\xa1())
tree: parse error: <text>:1:7:       ^
command failed: tree $'\''A(.a=B\xc3\xa1())'\''
$ tree $'\''A(\xc3\xa1")'\''
tree: parse error: <text>:1:3: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:3: A(\xc3\xa1")
tree: parse error: <text>:1:3:   ^
command failed: tree $'\''A(\xc3\xa1")'\''
$ tree $'\''A("\xc3\xa1")'\''
tree: parse error: <text>:1:4: unexpected non-ascii char '\''\xc3'\''
tree: parse error: <text>:1:4: A("\xc3\xa1")
tree: parse error: <text>:1:4:    ^
command failed: tree $'\''A("\xc3\xa1")'\''
$ tree '\''A('\''
tree: parse error: <text>:1:3: unexpected token EOS in node_args
tree: parse error: <text>:1:3: A(
tree: parse error: <text>:1:3:   ^
command failed: tree '\''A('\''
$ tree "A('\''"
tree: parse error: <text>:1:4: end of input inside literal
tree: parse error: <text>:1:4: A('\''
tree: parse error: <text>:1:4:    ^
command failed: tree "A('\''"
$ tree "A('\''"$'\''\n'\''"'\'')"
tree: parse error: <text>:1:4: end of input line inside literal
tree: parse error: <text>:1:4: A('\''
tree: parse error: <text>:1:4:    ^
command failed: tree "A('\''"$'\''\n'\''"'\'')"
$ tree '\''A(.'\''
tree: parse error: <text>:1:4: expected token NAME but got EOS
tree: parse error: <text>:1:4: A(.
tree: parse error: <text>:1:4:    ^
command failed: tree '\''A(.'\''
$ tree '\''A(.a'\''
tree: parse error: <text>:1:5: expected token "=" but got EOS
tree: parse error: <text>:1:5: A(.a
tree: parse error: <text>:1:5:     ^
command failed: tree '\''A(.a'\''
$ tree '\''A(.a='\''
tree: parse error: <text>:1:6: unexpected token EOS in arg_value
tree: parse error: <text>:1:6: A(.a=
tree: parse error: <text>:1:6:      ^
command failed: tree '\''A(.a='\''
$ tree '\''A(.a=5'\''
tree: parse error: <text>:1:6: unexpected token NUM in arg_value
tree: parse error: <text>:1:6: A(.a=5
tree: parse error: <text>:1:6:      ^
command failed: tree '\''A(.a=5'\''
$ tree '\''A(.a=)'\''
tree: parse error: <text>:1:6: unexpected token ")" in arg_value
tree: parse error: <text>:1:6: A(.a=)
tree: parse error: <text>:1:6:      ^
command failed: tree '\''A(.a=)'\''
$ tree "A(.a='\'''\''))"
tree: parse error: <text>:1:9: expected token EOS but got ")"
tree: parse error: <text>:1:9: A(.a='\'''\''))
tree: parse error: <text>:1:9:         ^
command failed: tree "A(.a='\'''\''))"
$ tree '\''A(.a=B'\''
tree: parse error: <text>:1:7: expected token "(" but got EOS
tree: parse error: <text>:1:7: A(.a=B
tree: parse error: <text>:1:7:       ^
command failed: tree '\''A(.a=B'\''
$ tree '\''A(.a=B('\''
tree: parse error: <text>:1:8: unexpected token EOS in node_args
tree: parse error: <text>:1:8: A(.a=B(
tree: parse error: <text>:1:8:        ^
command failed: tree '\''A(.a=B('\''
$ tree '\''A(.a=B(('\''
tree: parse error: <text>:1:8: unexpected token "(" in node_args
tree: parse error: <text>:1:8: A(.a=B((
tree: parse error: <text>:1:8:        ^
command failed: tree '\''A(.a=B(('\''
$ tree '\''A(.a=B()'\''
tree: parse error: <text>:1:9: expected token ")" but got EOS
tree: parse error: <text>:1:9: A(.a=B()
tree: parse error: <text>:1:9:         ^
command failed: tree '\''A(.a=B()'\''
$ tree '\''A(.a=B()))'\''
tree: parse error: <text>:1:10: expected token EOS but got ")"
tree: parse error: <text>:1:10: A(.a=B()))
tree: parse error: <text>:1:10:          ^
command failed: tree '\''A(.a=B()))'\''
$ tree '\''A(.a=B['\''
tree: parse error: <text>:1:7: expected token "(" but got "["
tree: parse error: <text>:1:7: A(.a=B[
tree: parse error: <text>:1:7:       ^
command failed: tree '\''A(.a=B['\''
$ tree '\''A(.a=B(]'\''
tree: parse error: <text>:1:8: unexpected token "]" in node_args
tree: parse error: <text>:1:8: A(.a=B(]
tree: parse error: <text>:1:8:        ^
command failed: tree '\''A(.a=B(]'\''
$ tree '\''A(.a=list'\''
tree: parse error: <text>:1:10: expected token "<" but got EOS
tree: parse error: <text>:1:10: A(.a=list
tree: parse error: <text>:1:10:          ^
command failed: tree '\''A(.a=list'\''
$ tree '\''A(.a=list<'\''
tree: parse error: <text>:1:11: expected token IDENT but got EOS
tree: parse error: <text>:1:11: A(.a=list<
tree: parse error: <text>:1:11:           ^
command failed: tree '\''A(.a=list<'\''
$ tree '\''A(.a=list<B'\''
tree: parse error: <text>:1:12: expected token ">" but got EOS
tree: parse error: <text>:1:12: A(.a=list<B
tree: parse error: <text>:1:12:            ^
command failed: tree '\''A(.a=list<B'\''
$ tree '\''A(.a=list<B>'\''
tree: parse error: <text>:1:13: expected token "[" but got EOS
tree: parse error: <text>:1:13: A(.a=list<B>
tree: parse error: <text>:1:13:             ^
command failed: tree '\''A(.a=list<B>'\''
$ tree '\''A(.a=list<B>['\''
tree: parse error: <text>:1:14: expected token "]" but got EOS
tree: parse error: <text>:1:14: A(.a=list<B>[
tree: parse error: <text>:1:14:              ^
command failed: tree '\''A(.a=list<B>['\''
$ tree '\''A(.a=list<B>[)'\''
tree: parse error: <text>:1:14: expected token "]" but got ")"
tree: parse error: <text>:1:14: A(.a=list<B>[)
tree: parse error: <text>:1:14:              ^
command failed: tree '\''A(.a=list<B>[)'\''
$ tree '\''A(.a=list<B>[]'\''
tree: parse error: <text>:1:15: expected token ")" but got EOS
tree: parse error: <text>:1:15: A(.a=list<B>[]
tree: parse error: <text>:1:15:               ^
command failed: tree '\''A(.a=list<B>[]'\''
$ tree '\''A(.x=list<B>[['\''
tree: parse error: <text>:1:15: expected token NUM but got EOS
tree: parse error: <text>:1:15: A(.x=list<B>[[
tree: parse error: <text>:1:15:               ^
command failed: tree '\''A(.x=list<B>[['\''
$ tree '\''A(.x=list<B>[[0'\''
tree: parse error: <text>:1:16: expected token "]" but got EOS
tree: parse error: <text>:1:16: A(.x=list<B>[[0
tree: parse error: <text>:1:16:                ^
command failed: tree '\''A(.x=list<B>[[0'\''
$ tree '\''A(.x=list<B>[[0]'\''
tree: parse error: <text>:1:17: expected token "=" but got EOS
tree: parse error: <text>:1:17: A(.x=list<B>[[0]
tree: parse error: <text>:1:17:                 ^
command failed: tree '\''A(.x=list<B>[[0]'\''
$ tree '\''A(.x=list<B>[[0]='\''
tree: parse error: <text>:1:18: expected token IDENT but got EOS
tree: parse error: <text>:1:18: A(.x=list<B>[[0]=
tree: parse error: <text>:1:18:                  ^
command failed: tree '\''A(.x=list<B>[[0]='\''
$ tree '\''A(.x=list<B>[[0]=0'\''
tree: parse error: <text>:1:18: expected token IDENT but got NUM
tree: parse error: <text>:1:18: A(.x=list<B>[[0]=0
tree: parse error: <text>:1:18:                  ^
command failed: tree '\''A(.x=list<B>[[0]=0'\''
$ tree '\''A(.x=list<B>[[0]=C'\''
tree: parse error: <text>:1:19: expected token "(" but got EOS
tree: parse error: <text>:1:19: A(.x=list<B>[[0]=C
tree: parse error: <text>:1:19:                   ^
command failed: tree '\''A(.x=list<B>[[0]=C'\''
$ tree '\''A(.x=list<B>[[0]=C('\''
tree: parse error: <text>:1:20: unexpected token EOS in node_args
tree: parse error: <text>:1:20: A(.x=list<B>[[0]=C(
tree: parse error: <text>:1:20:                    ^
command failed: tree '\''A(.x=list<B>[[0]=C('\''
$ tree '\''A(.x=list<B>[[0]=C(]'\''
tree: parse error: <text>:1:20: unexpected token "]" in node_args
tree: parse error: <text>:1:20: A(.x=list<B>[[0]=C(]
tree: parse error: <text>:1:20:                    ^
command failed: tree '\''A(.x=list<B>[[0]=C(]'\''
$ tree '\''A(.x=list<B>[[0]=C()'\''
tree: parse error: <text>:1:21: expected token "]" but got EOS
tree: parse error: <text>:1:21: A(.x=list<B>[[0]=C()
tree: parse error: <text>:1:21:                     ^
command failed: tree '\''A(.x=list<B>[[0]=C()'\''
$ tree '\''A(.x=list<B>[[0]=C())'\''
tree: parse error: <text>:1:21: expected token "]" but got ")"
tree: parse error: <text>:1:21: A(.x=list<B>[[0]=C())
tree: parse error: <text>:1:21:                     ^
command failed: tree '\''A(.x=list<B>[[0]=C())'\''
$ tree '\''A(.x=list<B>[[0]=C()]'\''
tree: parse error: <text>:1:22: expected token ")" but got EOS
tree: parse error: <text>:1:22: A(.x=list<B>[[0]=C()]
tree: parse error: <text>:1:22:                      ^
command failed: tree '\''A(.x=list<B>[[0]=C()]'\''
$ tree '\''A(.x=list<B>[[0]=C]'\''
tree: parse error: <text>:1:19: expected token "(" but got "]"
tree: parse error: <text>:1:19: A(.x=list<B>[[0]=C]
tree: parse error: <text>:1:19:                   ^
command failed: tree '\''A(.x=list<B>[[0]=C]'\''
$ tree '\''A(.x=list<B>[[0]=C)'\''
tree: parse error: <text>:1:19: expected token "(" but got ")"
tree: parse error: <text>:1:19: A(.x=list<B>[[0]=C)
tree: parse error: <text>:1:19:                   ^
command failed: tree '\''A(.x=list<B>[[0]=C)'\''
$ tree '\''A(.x=list<B>[[0]=C])'\''
tree: parse error: <text>:1:19: expected token "(" but got "]"
tree: parse error: <text>:1:19: A(.x=list<B>[[0]=C])
tree: parse error: <text>:1:19:                   ^
command failed: tree '\''A(.x=list<B>[[0]=C])'\''
$ tree '\''A(.x=list<B>[[0]=C)])'\''
tree: parse error: <text>:1:19: expected token "(" but got ")"
tree: parse error: <text>:1:19: A(.x=list<B>[[0]=C)])
tree: parse error: <text>:1:19:                   ^
command failed: tree '\''A(.x=list<B>[[0]=C)])'\''
$ tree '\''A(.x=list<B>[[0]=C()])'\''
$ tree '\''A(.x=list<B>[[-1]=C()])'\''
tree: parse error: <text>:1:15: unexpected char '\''-'\''
tree: parse error: <text>:1:15: A(.x=list<B>[[-1]=C()])
tree: parse error: <text>:1:15:               ^
command failed: tree '\''A(.x=list<B>[[-1]=C()])'\''
$ tree '\''A(.x=list<B>[[255]=C()])'\''
$ tree '\''A(.x=list<B>[[256]=C()])'\''
tree: parse error: <text>:1:15: invalid list-elem-index '\''256'\''
tree: parse error: <text>:1:15: A(.x=list<B>[[256]=C()])
tree: parse error: <text>:1:15:               ^
command failed: tree '\''A(.x=list<B>[[256]=C()])'\'''
) -L parse.new <(
echo '$ cd ../src/tree'
cd ../src/tree 2>&1 ||
echo 'command failed: cd ../src/tree'

echo '$ export LD_LIBRARY_PATH=.:abc:cxxpy'
export LD_LIBRARY_PATH=.:abc:cxxpy 2>&1 ||
echo 'command failed: export LD_LIBRARY_PATH=.:abc:cxxpy'

echo '$ tree() { ./tree --verbose -n "$@"; }'
tree() { ./tree --verbose -n "$@"; } 2>&1 ||
echo 'command failed: tree() { ./tree --verbose -n "$@"; }'

echo '$ tree $'\''\n\n\n\n\n'\'''
tree $'\n\n\n\n\n' 2>&1 ||
echo 'command failed: tree $'\''\n\n\n\n\n'\'''

echo '$ tree $'\''A\n\n\n\n\n'\'''
tree $'A\n\n\n\n\n' 2>&1 ||
echo 'command failed: tree $'\''A\n\n\n\n\n'\'''

echo '$ tree $'\''\n\n\n\nA\n'\'''
tree $'\n\n\n\nA\n' 2>&1 ||
echo 'command failed: tree $'\''\n\n\n\nA\n'\'''

echo '$ tree $'\''\n\n\n\nA  \n'\'''
tree $'\n\n\n\nA  \n' 2>&1 ||
echo 'command failed: tree $'\''\n\n\n\nA  \n'\'''

echo '$ tree -d $'\''\n\n\n\nA  \n'\'''
tree -d $'\n\n\n\nA  \n' 2>&1 ||
echo 'command failed: tree -d $'\''\n\n\n\nA  \n'\'''

echo '$ tree $'\''\n    \n         \n"abc"\ndef"\nghi'\'''
tree $'\n    \n         \n"abc"\ndef"\nghi' 2>&1 ||
echo 'command failed: tree $'\''\n    \n         \n"abc"\ndef"\nghi'\'''

echo '$ tree $'\''\n    \n         \n"abc\ndef"\nghi'\'''
tree $'\n    \n         \n"abc\ndef"\nghi' 2>&1 ||
echo 'command failed: tree $'\''\n    \n         \n"abc\ndef"\nghi'\'''

echo '$ tree "A('\''\'\'')"'
tree "A('\')" 2>&1 ||
echo 'command failed: tree "A('\''\'\'')"'

echo '$ tree '\''A("\")'\'''
tree 'A("\")' 2>&1 ||
echo 'command failed: tree '\''A("\")'\'''

echo '$ tree $'\''A("\\\n")'\'''
tree $'A("\\\n")' 2>&1 ||
echo 'command failed: tree $'\''A("\\\n")'\'''

echo '$ tree $'\''A("\x2")'\'''
tree $'A("\x2")' 2>&1 ||
echo 'command failed: tree $'\''A("\x2")'\'''

echo '$ tree $'\''A("\x3")'\'''
tree $'A("\x3")' 2>&1 ||
echo 'command failed: tree $'\''A("\x3")'\'''

echo '$ tree $'\''A("\x4")'\'''
tree $'A("\x4")' 2>&1 ||
echo 'command failed: tree $'\''A("\x4")'\'''

echo '$ tree $'\''A("\x5")'\'''
tree $'A("\x5")' 2>&1 ||
echo 'command failed: tree $'\''A("\x5")'\'''

echo '$ tree $'\''A("\x6")'\'''
tree $'A("\x6")' 2>&1 ||
echo 'command failed: tree $'\''A("\x6")'\'''

echo '$ tree $'\''A("\x7")'\'''
tree $'A("\x7")' 2>&1 ||
echo 'command failed: tree $'\''A("\x7")'\'''

echo '$ tree $'\''A("\x8")'\'''
tree $'A("\x8")' 2>&1 ||
echo 'command failed: tree $'\''A("\x8")'\'''

echo '$ tree $'\''A("\x9")'\'''
tree $'A("\x9")' 2>&1 ||
echo 'command failed: tree $'\''A("\x9")'\'''

echo '$ tree $'\''A("\xb")'\'''
tree $'A("\xb")' 2>&1 ||
echo 'command failed: tree $'\''A("\xb")'\'''

echo '$ tree $'\''A("\xc")'\'''
tree $'A("\xc")' 2>&1 ||
echo 'command failed: tree $'\''A("\xc")'\'''

echo '$ tree $'\''A("\xd")'\'''
tree $'A("\xd")' 2>&1 ||
echo 'command failed: tree $'\''A("\xd")'\'''

echo '$ tree $'\''A("\xe")'\'''
tree $'A("\xe")' 2>&1 ||
echo 'command failed: tree $'\''A("\xe")'\'''

echo '$ tree $'\''A("\xf")'\'''
tree $'A("\xf")' 2>&1 ||
echo 'command failed: tree $'\''A("\xf")'\'''

echo '$ tree $'\''A("\x10")'\'''
tree $'A("\x10")' 2>&1 ||
echo 'command failed: tree $'\''A("\x10")'\'''

echo '$ tree $'\''A("\x11")'\'''
tree $'A("\x11")' 2>&1 ||
echo 'command failed: tree $'\''A("\x11")'\'''

echo '$ tree $'\''A("\x12")'\'''
tree $'A("\x12")' 2>&1 ||
echo 'command failed: tree $'\''A("\x12")'\'''

echo '$ tree $'\''A("\x13")'\'''
tree $'A("\x13")' 2>&1 ||
echo 'command failed: tree $'\''A("\x13")'\'''

echo '$ tree $'\''A("\x14")'\'''
tree $'A("\x14")' 2>&1 ||
echo 'command failed: tree $'\''A("\x14")'\'''

echo '$ tree $'\''A("\x15")'\'''
tree $'A("\x15")' 2>&1 ||
echo 'command failed: tree $'\''A("\x15")'\'''

echo '$ tree $'\''A("\x16")'\'''
tree $'A("\x16")' 2>&1 ||
echo 'command failed: tree $'\''A("\x16")'\'''

echo '$ tree $'\''A("\x17")'\'''
tree $'A("\x17")' 2>&1 ||
echo 'command failed: tree $'\''A("\x17")'\'''

echo '$ tree $'\''A("\x18")'\'''
tree $'A("\x18")' 2>&1 ||
echo 'command failed: tree $'\''A("\x18")'\'''

echo '$ tree $'\''A("\x19")'\'''
tree $'A("\x19")' 2>&1 ||
echo 'command failed: tree $'\''A("\x19")'\'''

echo '$ tree $'\''A("\x1a")'\'''
tree $'A("\x1a")' 2>&1 ||
echo 'command failed: tree $'\''A("\x1a")'\'''

echo '$ tree $'\''A("\x1b")'\'''
tree $'A("\x1b")' 2>&1 ||
echo 'command failed: tree $'\''A("\x1b")'\'''

echo '$ tree $'\''A("\x1c")'\'''
tree $'A("\x1c")' 2>&1 ||
echo 'command failed: tree $'\''A("\x1c")'\'''

echo '$ tree $'\''A("\x1d")'\'''
tree $'A("\x1d")' 2>&1 ||
echo 'command failed: tree $'\''A("\x1d")'\'''

echo '$ tree $'\''A("\x1e")'\'''
tree $'A("\x1e")' 2>&1 ||
echo 'command failed: tree $'\''A("\x1e")'\'''

echo '$ tree $'\''A("\x1f")'\'''
tree $'A("\x1f")' 2>&1 ||
echo 'command failed: tree $'\''A("\x1f")'\'''

echo '$ tree -n $'\''\xc3\xa1'\'''
tree -n $'\xc3\xa1' 2>&1 ||
echo 'command failed: tree -n $'\''\xc3\xa1'\'''

echo '$ tree -n $'\''A\xc3\xa1'\'''
tree -n $'A\xc3\xa1' 2>&1 ||
echo 'command failed: tree -n $'\''A\xc3\xa1'\'''

echo '$ tree $'\''A(.\xc3\xa1="")'\'''
tree $'A(.\xc3\xa1="")' 2>&1 ||
echo 'command failed: tree $'\''A(.\xc3\xa1="")'\'''

echo '$ tree $'\''A(.a=\xc3\xa1())'\'''
tree $'A(.a=\xc3\xa1())' 2>&1 ||
echo 'command failed: tree $'\''A(.a=\xc3\xa1())'\'''

echo '$ tree $'\''A(.a=\xc3\xa1)'\'''
tree $'A(.a=\xc3\xa1)' 2>&1 ||
echo 'command failed: tree $'\''A(.a=\xc3\xa1)'\'''

echo '$ tree $'\''A(.a=B\xc3\xa1())'\'''
tree $'A(.a=B\xc3\xa1())' 2>&1 ||
echo 'command failed: tree $'\''A(.a=B\xc3\xa1())'\'''

echo '$ tree $'\''A(\xc3\xa1")'\'''
tree $'A(\xc3\xa1")' 2>&1 ||
echo 'command failed: tree $'\''A(\xc3\xa1")'\'''

echo '$ tree $'\''A("\xc3\xa1")'\'''
tree $'A("\xc3\xa1")' 2>&1 ||
echo 'command failed: tree $'\''A("\xc3\xa1")'\'''

echo '$ tree '\''A('\'''
tree 'A(' 2>&1 ||
echo 'command failed: tree '\''A('\'''

echo '$ tree "A('\''"'
tree "A('" 2>&1 ||
echo 'command failed: tree "A('\''"'

echo '$ tree "A('\''"$'\''\n'\''"'\'')"'
tree "A('"$'\n'"')" 2>&1 ||
echo 'command failed: tree "A('\''"$'\''\n'\''"'\'')"'

echo '$ tree '\''A(.'\'''
tree 'A(.' 2>&1 ||
echo 'command failed: tree '\''A(.'\'''

echo '$ tree '\''A(.a'\'''
tree 'A(.a' 2>&1 ||
echo 'command failed: tree '\''A(.a'\'''

echo '$ tree '\''A(.a='\'''
tree 'A(.a=' 2>&1 ||
echo 'command failed: tree '\''A(.a='\'''

echo '$ tree '\''A(.a=5'\'''
tree 'A(.a=5' 2>&1 ||
echo 'command failed: tree '\''A(.a=5'\'''

echo '$ tree '\''A(.a=)'\'''
tree 'A(.a=)' 2>&1 ||
echo 'command failed: tree '\''A(.a=)'\'''

echo '$ tree "A(.a='\'''\''))"'
tree "A(.a=''))" 2>&1 ||
echo 'command failed: tree "A(.a='\'''\''))"'

echo '$ tree '\''A(.a=B'\'''
tree 'A(.a=B' 2>&1 ||
echo 'command failed: tree '\''A(.a=B'\'''

echo '$ tree '\''A(.a=B('\'''
tree 'A(.a=B(' 2>&1 ||
echo 'command failed: tree '\''A(.a=B('\'''

echo '$ tree '\''A(.a=B(('\'''
tree 'A(.a=B((' 2>&1 ||
echo 'command failed: tree '\''A(.a=B(('\'''

echo '$ tree '\''A(.a=B()'\'''
tree 'A(.a=B()' 2>&1 ||
echo 'command failed: tree '\''A(.a=B()'\'''

echo '$ tree '\''A(.a=B()))'\'''
tree 'A(.a=B()))' 2>&1 ||
echo 'command failed: tree '\''A(.a=B()))'\'''

echo '$ tree '\''A(.a=B['\'''
tree 'A(.a=B[' 2>&1 ||
echo 'command failed: tree '\''A(.a=B['\'''

echo '$ tree '\''A(.a=B(]'\'''
tree 'A(.a=B(]' 2>&1 ||
echo 'command failed: tree '\''A(.a=B(]'\'''

echo '$ tree '\''A(.a=list'\'''
tree 'A(.a=list' 2>&1 ||
echo 'command failed: tree '\''A(.a=list'\'''

echo '$ tree '\''A(.a=list<'\'''
tree 'A(.a=list<' 2>&1 ||
echo 'command failed: tree '\''A(.a=list<'\'''

echo '$ tree '\''A(.a=list<B'\'''
tree 'A(.a=list<B' 2>&1 ||
echo 'command failed: tree '\''A(.a=list<B'\'''

echo '$ tree '\''A(.a=list<B>'\'''
tree 'A(.a=list<B>' 2>&1 ||
echo 'command failed: tree '\''A(.a=list<B>'\'''

echo '$ tree '\''A(.a=list<B>['\'''
tree 'A(.a=list<B>[' 2>&1 ||
echo 'command failed: tree '\''A(.a=list<B>['\'''

echo '$ tree '\''A(.a=list<B>[)'\'''
tree 'A(.a=list<B>[)' 2>&1 ||
echo 'command failed: tree '\''A(.a=list<B>[)'\'''

echo '$ tree '\''A(.a=list<B>[]'\'''
tree 'A(.a=list<B>[]' 2>&1 ||
echo 'command failed: tree '\''A(.a=list<B>[]'\'''

echo '$ tree '\''A(.x=list<B>[['\'''
tree 'A(.x=list<B>[[' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[['\'''

echo '$ tree '\''A(.x=list<B>[[0'\'''
tree 'A(.x=list<B>[[0' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0'\'''

echo '$ tree '\''A(.x=list<B>[[0]'\'''
tree 'A(.x=list<B>[[0]' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]'\'''

echo '$ tree '\''A(.x=list<B>[[0]='\'''
tree 'A(.x=list<B>[[0]=' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]='\'''

echo '$ tree '\''A(.x=list<B>[[0]=0'\'''
tree 'A(.x=list<B>[[0]=0' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=0'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C'\'''
tree 'A(.x=list<B>[[0]=C' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C('\'''
tree 'A(.x=list<B>[[0]=C(' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C('\'''

echo '$ tree '\''A(.x=list<B>[[0]=C(]'\'''
tree 'A(.x=list<B>[[0]=C(]' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C(]'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C()'\'''
tree 'A(.x=list<B>[[0]=C()' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C()'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C())'\'''
tree 'A(.x=list<B>[[0]=C())' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C())'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C()]'\'''
tree 'A(.x=list<B>[[0]=C()]' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C()]'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C]'\'''
tree 'A(.x=list<B>[[0]=C]' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C]'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C)'\'''
tree 'A(.x=list<B>[[0]=C)' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C)'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C])'\'''
tree 'A(.x=list<B>[[0]=C])' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C])'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C)])'\'''
tree 'A(.x=list<B>[[0]=C)])' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C)])'\'''

echo '$ tree '\''A(.x=list<B>[[0]=C()])'\'''
tree 'A(.x=list<B>[[0]=C()])' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[0]=C()])'\'''

echo '$ tree '\''A(.x=list<B>[[-1]=C()])'\'''
tree 'A(.x=list<B>[[-1]=C()])' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[-1]=C()])'\'''

echo '$ tree '\''A(.x=list<B>[[255]=C()])'\'''
tree 'A(.x=list<B>[[255]=C()])' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[255]=C()])'\'''

echo '$ tree '\''A(.x=list<B>[[256]=C()])'\'''
tree 'A(.x=list<B>[[256]=C()])' 2>&1 ||
echo 'command failed: tree '\''A(.x=list<B>[[256]=C()])'\'''
)

