#!/bin/bash

# Copyright (C) 2016, 2017, 2021  Stefan Vargyas
# 
# This file is part of C++Py-Tree.
# 
# C++Py-Tree is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# C++Py-Tree is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with C++Py-Tree.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T funcs
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L funcs.old <(echo \
'$ cd ../src/tree
$ export LD_LIBRARY_PATH=.:abc:cxxpy
$ tree() { set -o pipefail && ./tree "$@" 2>&1|sed -r '\''/^~?(node|raw)\(/d'\''; }
$ tree --debug -F foo
tree: ext-func: file: '\''./foo.so'\''
tree: error: failed loading module '\''foo.so'\'': ./foo.so: cannot open shared object file: No such file or directory
command failed: tree --debug -F foo
$ tree --debug -F printer::foo
tree: ext-func: file: '\''./printer.so'\''
tree: ext-func: func: '\''foo'\''
tree: error: cannot find func '\''foo'\'': ./printer.so: undefined symbol: foo
command failed: tree --debug -F printer::foo
$ tree --debug -F cxxpy/cxxpy.so::foo
tree: ext-func: file: '\''cxxpy/cxxpy.so'\''
tree: ext-func: func: '\''foo'\''
tree: error: cannot find func '\''foo'\'': cxxpy/cxxpy.so: undefined symbol: foo
command failed: tree --debug -F cxxpy/cxxpy.so::foo
$ tree --debug -F abc/abc.so::foo
tree: ext-func: file: '\''abc/abc.so'\''
tree: ext-func: func: '\''foo'\''
tree: error: cannot find func '\''foo'\'': abc/abc.so: undefined symbol: foo
command failed: tree --debug -F abc/abc.so::foo
$ tree --debug -F printer::print -- -F foo
tree: ext-func: file: '\''./printer.so'\''
tree: ext-func: func: '\''print'\''
tree: tree-printer: error: extension functions are not supported
command failed: tree --debug -F printer::print -- -F foo
$ tree --debug -F printer::dump -- -F foo
tree: ext-func: file: '\''./printer.so'\''
tree: ext-func: func: '\''dump'\''
tree: tree-printer: error: extension functions are not supported
command failed: tree --debug -F printer::dump -- -F foo
$ tree --debug -F printer::pretty_print -- -F foo
tree: ext-func: file: '\''./printer.so'\''
tree: ext-func: func: '\''pretty_print'\''
tree: tree-printer: error: extension functions are not supported
command failed: tree --debug -F printer::pretty_print -- -F foo
$ tree --debug -F printer::terse_print -- -F foo
tree: ext-func: file: '\''./printer.so'\''
tree: ext-func: func: '\''terse_print'\''
tree: tree-printer: error: extension functions are not supported
command failed: tree --debug -F printer::terse_print -- -F foo
$ tree --debug-ext -F cxxpy/cxxpy.so '\''Node()'\'' -- -F cxxpy/printer::print
tree: ext-func: file: '\''cxxpy/printer.so'\''
tree: ext-func: func: '\''print'\''
tree: cxxpy-printer: error: extension functions are not supported
command failed: tree --debug-ext -F cxxpy/cxxpy.so '\''Node()'\'' -- -F cxxpy/printer::print
$ tree --debug-ext -F abc/abc.so '\''Node()'\'' -- -F abc/printer::print
tree: ext-func: file: '\''abc/printer.so'\''
tree: ext-func: func: '\''print'\''
tree: abc-printer: error: extension functions are not supported
command failed: tree --debug-ext -F abc/abc.so '\''Node()'\'' -- -F abc/printer::print'
) -L funcs.new <(
echo '$ cd ../src/tree'
cd ../src/tree 2>&1 ||
echo 'command failed: cd ../src/tree'

echo '$ export LD_LIBRARY_PATH=.:abc:cxxpy'
export LD_LIBRARY_PATH=.:abc:cxxpy 2>&1 ||
echo 'command failed: export LD_LIBRARY_PATH=.:abc:cxxpy'

echo '$ tree() { set -o pipefail && ./tree "$@" 2>&1|sed -r '\''/^~?(node|raw)\(/d'\''; }'
tree() { set -o pipefail && ./tree "$@" 2>&1|sed -r '/^~?(node|raw)\(/d'; } 2>&1 ||
echo 'command failed: tree() { set -o pipefail && ./tree "$@" 2>&1|sed -r '\''/^~?(node|raw)\(/d'\''; }'

echo '$ tree --debug -F foo'
tree --debug -F foo 2>&1 ||
echo 'command failed: tree --debug -F foo'

echo '$ tree --debug -F printer::foo'
tree --debug -F printer::foo 2>&1 ||
echo 'command failed: tree --debug -F printer::foo'

echo '$ tree --debug -F cxxpy/cxxpy.so::foo'
tree --debug -F cxxpy/cxxpy.so::foo 2>&1 ||
echo 'command failed: tree --debug -F cxxpy/cxxpy.so::foo'

echo '$ tree --debug -F abc/abc.so::foo'
tree --debug -F abc/abc.so::foo 2>&1 ||
echo 'command failed: tree --debug -F abc/abc.so::foo'

echo '$ tree --debug -F printer::print -- -F foo'
tree --debug -F printer::print -- -F foo 2>&1 ||
echo 'command failed: tree --debug -F printer::print -- -F foo'

echo '$ tree --debug -F printer::dump -- -F foo'
tree --debug -F printer::dump -- -F foo 2>&1 ||
echo 'command failed: tree --debug -F printer::dump -- -F foo'

echo '$ tree --debug -F printer::pretty_print -- -F foo'
tree --debug -F printer::pretty_print -- -F foo 2>&1 ||
echo 'command failed: tree --debug -F printer::pretty_print -- -F foo'

echo '$ tree --debug -F printer::terse_print -- -F foo'
tree --debug -F printer::terse_print -- -F foo 2>&1 ||
echo 'command failed: tree --debug -F printer::terse_print -- -F foo'

echo '$ tree --debug-ext -F cxxpy/cxxpy.so '\''Node()'\'' -- -F cxxpy/printer::print'
tree --debug-ext -F cxxpy/cxxpy.so 'Node()' -- -F cxxpy/printer::print 2>&1 ||
echo 'command failed: tree --debug-ext -F cxxpy/cxxpy.so '\''Node()'\'' -- -F cxxpy/printer::print'

echo '$ tree --debug-ext -F abc/abc.so '\''Node()'\'' -- -F abc/printer::print'
tree --debug-ext -F abc/abc.so 'Node()' -- -F abc/printer::print 2>&1 ||
echo 'command failed: tree --debug-ext -F abc/abc.so '\''Node()'\'' -- -F abc/printer::print'
)

